%% Check whether the bounding boxes that are estimated in PBRT match the ellipses 
% This straightforward comparison works here because for the pixel4a rear
% camera the input plane was chosen at the filmdistance for focus at
% infinity
clear; close all


%% PBRT V3 Data bounding boxes

boxes=[0,[ -0.389618784, -0.392332017 , 0.394083589, 0.391166866 ]
0.046875,[ -0.388574064, -0.392332017 , 0.397516221, 0.389596462 ]
0.140625,[ -0.383300722, -0.392332017 , 0.405077845, 0.390891701 ]
0.09375,[ -0.386111468, -0.392332017 , 0.399928987, 0.390891701 ]
0.1875,[ -0.38096258, -0.392855465 , 0.406868786, 0.390891701 ]
0.234375,[ -0.378450364, -0.392855465 , 0.411943108, 0.391436815 ]
0.28125,[ -0.375813663, -0.393553734 , 0.41602245, 0.391436815 ]
0.328125,[ -0.374868482, -0.393553734 , 0.420499802, 0.391436815 ]
0.375,[ -0.372381032, -0.393553734 , 0.424927294, 0.392396569 ]
0.421875,[ -0.370851278, -0.393553734 , 0.428260386, 0.393247485 ]
0.46875,[ -0.368388802, -0.393553734 , 0.432961643, 0.394294292 ]
0.515625,[ -0.367232174, -0.393553734 , 0.438707441, 0.395341337 ]
0.5625,[ -0.365478486, -0.394426078 , 0.443931013, 0.395341337 ]
0.609375,[ -0.364719927, -0.394949496 , 0.447512865, 0.395690054 ]
0.65625,[ -0.363053322, -0.395472944 , 0.454825848, 0.396453857 ]
0.703125,[ -0.362431437, -0.395472944 , 0.460198581, 0.397762597 ]
0.75,[ -0.361113131, -0.396258414 , 0.465322614, 0.39830777 ]
0.796875,[ -0.360143095, -0.396781862 , 0.471988887, 0.398809642 ]
0.84375,[ -0.359098405, -0.397109002 , 0.47810781, 0.398896664 ]
0.890625,[ -0.357257694, -0.398090601 , 0.487062424, 0.400641739 ]
0.9375,[ -0.355528921, -0.398090601 , 0.493728667, 0.401688755 ]
0.984375,[ -0.354247898, -0.399203062 , 0.501489401, 0.402233988 ]
1.03125,[ -0.352531642, -0.399377644 , 0.511339486, 0.402670324 ]
1.07812,[ -0.350491941, -0.40051192 , 0.518652439, 0.403979063 ]
1.125,[ -0.346462458, -0.401035398 , 0.530044675, 0.404589772 ]
1.17188,[ -0.343776047, -0.401297092 , 0.5401932, 0.405549735 ]
1.21875,[ -0.33887589, -0.402016819 , 0.551386535, 0.405702084 ]
1.26563,[ -0.333776712, -0.403042167 , 0.564868212, 0.407709062 ]
1.3125,[ -0.32855317, -0.404110909 , 0.578200758, 0.408690512 ]
1.35937,[ -0.321538687, -0.404110909 , 0.589742124, 0.408690512 ]
1.40625,[ -0.313877434, -0.405092359 , 0.604069591, 0.410130441 ]
1.45313,[ -0.305519879, -0.40666309 , 0.620187938, 0.409366816 ]
1.54687,[ -0.284924209, -0.41043669 , 0.654314995, 0.410064846 ]
1.5,[ -0.296167195, -0.411570787 , 0.638097167, 0.407665074 ]
1.59375,[ -0.270298302, -0.409018755 , 0.673318744, 0.411526144 ]
1.64063,[ -0.255970955, -0.412944853 , 0.690034032, 0.408123344 ]
1.6875,[ -0.242837518, -0.412596077 , 0.710181952, 0.410064846 ]
1.73438,[ -0.22453028, -0.408080906 , 0.731722772, 0.412834883 ]
1.78125,[ -0.204680771, -0.407775432 , 0.751124501, 0.413358301 ]
1.82812,[ -0.184582591, -0.407775432 , 0.773461282, 0.413293034 ]
1.875,[ -0.163638771, -0.407426476 , 0.795897603, 0.413532913 ]
1.92188,[ -0.141550601, -0.407426476 , 0.819876134, 0.413532913 ]
1.96875,[ -0.117174156, -0.407688171 , 0.846441448, 0.413816452 ]
2.01563,[ -0.0897134095, -0.407164723 , 0.868529618, 0.413554758 ]
2.0625,[ -0.062003769, -0.406008542 , 0.89300549, 0.413140357 ]
2.10938,[ -0.0368811078, -0.410196632 , 0.917382061, 0.411329806 ]
2.15625,[ -0.00464431103, -0.413054168 , 0.944046915, 0.410544723 ]
2.20313,[ 0.0234134104, -0.412290543 , 0.971806288, 0.409955829 ]
2.25,[ 0.0556499809, -0.411745429 , 1.00135636, 0.409235746 ]
2.29687,[ 0.0925629511, -0.410600305 , 1.03508568, 0.408352375 ]
2.34375,[ 0.129475906, -0.409749538 , 1.06383979, 0.406716466 ]
2.39062,[ 0.166090399, -0.40922609 , 1.10194671, 0.406781465 ]
2.4375,[ 0.204893723, -0.407677174 , 1.13358653, 0.405407786 ]
2.48437,[ 0.249368519, -0.406630129 , 1.17059886, 0.404229879 ]
2.53125,[ 0.291256219, -0.405430764 , 1.2094022, 0.403182834 ]
2.57813,[ 0.337223262, -0.403751016 , 1.2452209, 0.40087083 ]
2.625,[ 0.381598443, -0.40209344 , 1.28422308, 0.399518311 ]
2.67188,[ 0.431147367, -0.400588244 , 1.32561338, 0.397358656 ]
2.71875,[ 0.482188731, -0.398777574 , 1.36700368, 0.397162527 ]
2.76563,[ 0.534324586, -0.398167104 , 1.40919006, 0.393803507 ]
2.8125,[ 0.585763872, -0.395680398 , 1.45336616, 0.393039852 ]
2.85937,[ 0.640685618, -0.393128276 , 1.49813926, 0.390422493 ]
2.90625,[ 0.696403325, -0.391606957 , 1.53933048, 0.388388485 ]
2.95312,[ 0.754110932, -0.389076561 , 1.58887935, 0.38742882 ]];




%%  Get positions

positionsBoxes = boxes(:,1);
%% RTF



RTF=jsonread('pixel4a-rearcamera-ellipse-raytransfer.json')
passnopass=RTF.polynomials.passnopass;

% Reinterpolate the passnopass function at positions of bounding boxes
interpRTF = @(x,pos) interp1(passnopass.positions,x,pos);

centers=[interpRTF(passnopass.centersX,positionsBoxes) interpRTF(passnopass.centersY,positionsBoxes)];
radii=[interpRTF(passnopass.radiiX,positionsBoxes) interpRTF(passnopass.radiiY,positionsBoxes)];


%% Draw bounding boxes
nbPositions = numel(positionsBoxes);
figure(1);clf;
for i=1:numel(positionsBoxes)
    subplot(round(sqrt(nbPositions)),round(sqrt(nbPositions)),i); hold on
    if(i==1)
        % Keep reference rectangle
        posMin0 = boxes(i,2:3);    posMax0= boxes(i,4:5);    widthheight0=(posMax0-posMin0);
    end
    
    posMin = boxes(i,2:3);    posMax= boxes(i,4:5);    widthheight=(posMax-posMin);
    
    % Draw bounding box
    rectangle('Position',[[posMin] [widthheight]],'EdgeColor','r')
    rectangle('Position',[[posMin0] [widthheight0]],'EdgeColor','k','linestyle',':')
    
    % Draw RTF Ellipse 
     h = drawellipse('Center',flip([centers(i,:)]),'SemiAxes',flip(radii(i,:)),'markersize',0.01,'linewidth',0.5);
    

    %axis equal
        ylim([-2 2.2])
    xlim([-2 2.2])
    title([num2str(positionsBoxes(i)) ' mm'])
end

%% Plot radii vs boxewidths

 posMin = boxes(:,2:3);    posMax= boxes(:,4:5);    
 widthheight=(posMax-posMin);
figure(2);clf;hold on ; 
colors={'k', 'r'}
for xy=[1 2]
plot(positionsBoxes,widthheight(:,xy)/2,'color',colors{xy},'linestyle','--'); 
plot(positionsBoxes,radii(:,3-xy),colors{xy})
end
legend('Bounding Box','Ellipse')


%% Areas ( to get an estiamte of percentage of rays that need to be vignetted
figure(3);clf; hold on;
title('Areas')
areaBox=prod(widthheight,2)
areaEllipses=pi*prod(radii,2)
plot(positionsBoxes,areaBox,'k'); hold on
plot(positionsBoxes,areaEllipses,'r')
ylim([0 inf])

sumBox = sum(areaBox);
sumEllipses= sum(areaEllipses);
percentVignetted = (sumBox-sumEllipses)/sumBox
