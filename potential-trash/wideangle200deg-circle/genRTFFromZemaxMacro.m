clear; close all;


%% Lens name and propertiesq

lensName='wideangle200deg-circle-zemax'
offset_sensorside=2.003;     
offset_objectside=0.01; %%mm
lensThickness=14.19057;
disable_dz_polynomial=false;
%% Load input output rays 
% load data generated by ZEMAX

%X=dlmread(['/home/thomas42/Downloads/widenangle200deg-circle.txt'],'\s',1);
X=dlmread(['/home/thomas42/Downloads/wideangle200deg-primaryWL1.txt'],'\s',1);



% Extract input and output rays
iRays=X(:,[3 5 6]);
oRays=X(:,[8 9 10 11 12 13]);

% Z output values need to be calculated from rear vertex so we need to
% change coordinate system. CAUTION, whether this shift is necessary
% depends on whether ZEMAX data was generated using the rear vertex as a
% global coordinate reference. 

% For the current dataset the global coordinate reference was the input
% plane. Hence we need to subtract inputplaneoffset + lensthickness from
% the Z value of oRays
oRays(:,3)= oRays(:,3) - (lensThickness+offset_sensorside);


%% RTF generation options
for polyDeg =  [1 2 3 4 5 6 7 8 9 10 11 12 13]
outputDir = fullfile(piRootPath, 'data/lens/RTF');
%outputDir='./'
visualize=true;

%% generateRTF
rtfName = [lensName '-poly' num2str(polyDeg) '-raytransfer'];
disp(['RTF Generation: ' rtfName])
rtf=generateRTFfromIO(lensName,rtfName,iRays,oRays,offset_sensorside,offset_objectside,lensThickness,...
    'outputdir',outputDir,'visualize',visualize,'polynomialdegree',polyDeg,...
    'intersectionplanedistance',17,'disable_dz_polynomial',disable_dz_polynomial);

return
end
